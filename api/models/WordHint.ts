/* tslint:disable */
/* eslint-disable */
/**
 * Lingq.com API
 * HTTP API for lingq.com
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues, getByKey } from '../runtime';
/**
 *
 * @export
 * @interface WordHint
 */
export interface WordHint {
  /**
   *
   * @type {number}
   * @memberof WordHint
   */
  id: number;
  /**
   *
   * @type {string}
   * @memberof WordHint
   */
  locale: string;
  /**
   *
   * @type {boolean}
   * @memberof WordHint
   */
  flagged: boolean;
  /**
   *
   * @type {string}
   * @memberof WordHint
   */
  text: string;
  /**
   *
   * @type {boolean}
   * @memberof WordHint
   */
  isGoogleTranslate: boolean;
  /**
   *
   * @type {number}
   * @memberof WordHint
   */
  popularity: number;
}

export function WordHintFromJSON(json: any): WordHint {
  return WordHintFromJSONTyped(json, false);
}

export function WordHintFromJSONTyped(json: any, ignoreDiscriminator: boolean): WordHint {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: getByKey('WordHint', json, 'id', true, false),
    locale: getByKey('WordHint', json, 'locale', true, false),
    flagged: getByKey('WordHint', json, 'flagged', true, false),
    text: getByKey('WordHint', json, 'text', true, false),
    isGoogleTranslate: getByKey('WordHint', json, 'is_google_translate', true, false),
    popularity: getByKey('WordHint', json, 'popularity', true, false),
  };
}

export function WordHintToJSON(value?: WordHint | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    locale: value.locale,
    flagged: value.flagged,
    text: value.text,
    is_google_translate: value.isGoogleTranslate,
    popularity: value.popularity,
  };
}
