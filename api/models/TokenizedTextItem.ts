/* tslint:disable */
/* eslint-disable */
/**
 * Lingq.com API
 * HTTP API for lingq.com
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues, getByKey } from '../runtime';
import { Token, TokenFromJSON, TokenFromJSONTyped, TokenToJSON } from './Token';

/**
 *
 * @export
 * @interface TokenizedTextItem
 */
export interface TokenizedTextItem {
  /**
   *
   * @type {number}
   * @memberof TokenizedTextItem
   */
  index: number;
  /**
   *
   * @type {Date}
   * @memberof TokenizedTextItem
   */
  timestamp: Date;
  /**
   *
   * @type {string}
   * @memberof TokenizedTextItem
   */
  text: string;
  /**
   *
   * @type {Array<Token>}
   * @memberof TokenizedTextItem
   */
  tokens: Array<Token>;
  /**
   *
   * @type {string}
   * @memberof TokenizedTextItem
   */
  normalizedText: string;
}

export function TokenizedTextItemFromJSON(json: any): TokenizedTextItem {
  return TokenizedTextItemFromJSONTyped(json, false);
}

export function TokenizedTextItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenizedTextItem {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    index: getByKey('TokenizedTextItem', json, 'index', true, false),
    timestamp: new Date(json['timestamp']),
    text: getByKey('TokenizedTextItem', json, 'text', true, false),
    tokens: (json['tokens'] as Array<any>).map(TokenFromJSON),
    normalizedText: getByKey('TokenizedTextItem', json, 'normalizedText', true, false),
  };
}

export function TokenizedTextItemToJSON(value?: TokenizedTextItem | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    index: value.index,
    timestamp: value.timestamp.toISOString(),
    text: value.text,
    tokens: (value.tokens as Array<any>).map(TokenToJSON),
    normalizedText: value.normalizedText,
  };
}
