/* tslint:disable */
/* eslint-disable */
/**
 * Lingq.com API
 * HTTP API for lingq.com
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LessonTeaser
 */
export interface LessonTeaser {
    /**
     * 
     * @type {number}
     * @memberof LessonTeaser
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof LessonTeaser
     */
    contentId: number;
    /**
     * 
     * @type {number}
     * @memberof LessonTeaser
     */
    collectionId: number;
    /**
     * 
     * @type {string}
     * @memberof LessonTeaser
     */
    collectionTitle: string;
    /**
     * 
     * @type {string}
     * @memberof LessonTeaser
     */
    url: string;
    /**
     * 
     * @type {string}
     * @memberof LessonTeaser
     */
    originalUrl: string | null;
    /**
     * 
     * @type {string}
     * @memberof LessonTeaser
     */
    imageUrl: string;
    /**
     * 
     * @type {string}
     * @memberof LessonTeaser
     */
    originalImageUrl: string;
    /**
     * 
     * @type {string}
     * @memberof LessonTeaser
     */
    providerImageUrl: string;
    /**
     * 
     * @type {string}
     * @memberof LessonTeaser
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof LessonTeaser
     */
    description: string;
    /**
     * 
     * @type {number}
     * @memberof LessonTeaser
     */
    duration: number;
    /**
     * 
     * @type {string}
     * @memberof LessonTeaser
     */
    audio: string;
    /**
     * 
     * @type {boolean}
     * @memberof LessonTeaser
     */
    audioPending: boolean;
    /**
     * 
     * @type {Date}
     * @memberof LessonTeaser
     */
    pubDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof LessonTeaser
     */
    sharedDate: Date | null;
    /**
     * 
     * @type {string}
     * @memberof LessonTeaser
     */
    sharedByName: string;
    /**
     * 
     * @type {string}
     * @memberof LessonTeaser
     */
    giveRoseUrl: string;
    /**
     * 
     * @type {number}
     * @memberof LessonTeaser
     */
    wordCount: number;
    /**
     * 
     * @type {number}
     * @memberof LessonTeaser
     */
    uniqueWordCount: number;
    /**
     * 
     * @type {string}
     * @memberof LessonTeaser
     */
    externalType: string | null;
    /**
     * 
     * @type {string}
     * @memberof LessonTeaser
     */
    type: LessonTeaserTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof LessonTeaser
     */
    status: string;
    /**
     * 
     * @type {number}
     * @memberof LessonTeaser
     */
    pos: number;
    /**
     * 
     * @type {number}
     * @memberof LessonTeaser
     */
    price: number;
    /**
     * 
     * @type {boolean}
     * @memberof LessonTeaser
     */
    opened: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof LessonTeaser
     */
    completed: boolean;
    /**
     * 
     * @type {number}
     * @memberof LessonTeaser
     */
    percentCompleted: number;
    /**
     * 
     * @type {number}
     * @memberof LessonTeaser
     */
    newWordsCount: number;
    /**
     * 
     * @type {number}
     * @memberof LessonTeaser
     */
    difficulty: number;
    /**
     * 
     * @type {string}
     * @memberof LessonTeaser
     */
    providerName: string;
    /**
     * 
     * @type {string}
     * @memberof LessonTeaser
     */
    providerDescription: string;
    /**
     * 
     * @type {Date}
     * @memberof LessonTeaser
     */
    lastRoseReceived: Date;
    /**
     * 
     * @type {number}
     * @memberof LessonTeaser
     */
    lessonRating: number;
    /**
     * 
     * @type {number}
     * @memberof LessonTeaser
     */
    lessonVotes: number;
    /**
     * 
     * @type {number}
     * @memberof LessonTeaser
     */
    audioRating: number;
    /**
     * 
     * @type {number}
     * @memberof LessonTeaser
     */
    audioVotes: number;
    /**
     * 
     * @type {number}
     * @memberof LessonTeaser
     */
    rosesCount: number;
    /**
     * 
     * @type {boolean}
     * @memberof LessonTeaser
     */
    isFavorite: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof LessonTeaser
     */
    isOverLimit: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof LessonTeaser
     */
    level: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof LessonTeaser
     */
    tags: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof LessonTeaser
     */
    providerUrl: string;
    /**
     * 
     * @type {number}
     * @memberof LessonTeaser
     */
    readTimes: number;
    /**
     * 
     * @type {number}
     * @memberof LessonTeaser
     */
    listenTimes: number;
    /**
     * 
     * @type {boolean}
     * @memberof LessonTeaser
     */
    roseGiven: boolean;
    /**
     * 
     * @type {Date}
     * @memberof LessonTeaser
     */
    openDate: Date;
    /**
     * 
     * @type {number}
     * @memberof LessonTeaser
     */
    viewsCount: number;
    /**
     * 
     * @type {number}
     * @memberof LessonTeaser
     */
    isProtected: number | null;
}

/**
* @export
* @enum {string}
*/
export enum LessonTeaserTypeEnum {
    Lesson = 'lesson'
}

export function LessonTeaserFromJSON(json: any): LessonTeaser {
    return LessonTeaserFromJSONTyped(json, false);
}

export function LessonTeaserFromJSONTyped(json: any, ignoreDiscriminator: boolean): LessonTeaser {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'contentId': json['contentId'],
        'collectionId': json['collectionId'],
        'collectionTitle': json['collectionTitle'],
        'url': json['url'],
        'originalUrl': json['originalUrl'],
        'imageUrl': json['imageUrl'],
        'originalImageUrl': json['originalImageUrl'],
        'providerImageUrl': json['providerImageUrl'],
        'title': json['title'],
        'description': json['description'],
        'duration': json['duration'],
        'audio': json['audio'],
        'audioPending': json['audioPending'],
        'pubDate': (new Date(json['pubDate'])),
        'sharedDate': (json['sharedDate'] === null ? null : new Date(json['sharedDate'])),
        'sharedByName': json['sharedByName'],
        'giveRoseUrl': json['giveRoseUrl'],
        'wordCount': json['wordCount'],
        'uniqueWordCount': json['uniqueWordCount'],
        'externalType': json['external_type'],
        'type': json['type'],
        'status': json['status'],
        'pos': json['pos'],
        'price': json['price'],
        'opened': json['opened'],
        'completed': json['completed'],
        'percentCompleted': json['percentCompleted'],
        'newWordsCount': json['newWordsCount'],
        'difficulty': json['difficulty'],
        'providerName': json['providerName'],
        'providerDescription': json['providerDescription'],
        'lastRoseReceived': (new Date(json['lastRoseReceived'])),
        'lessonRating': json['lessonRating'],
        'lessonVotes': json['lessonVotes'],
        'audioRating': json['audioRating'],
        'audioVotes': json['audioVotes'],
        'rosesCount': json['rosesCount'],
        'isFavorite': json['isFavorite'],
        'isOverLimit': json['isOverLimit'],
        'level': json['level'],
        'tags': json['tags'],
        'providerUrl': json['providerUrl'],
        'readTimes': json['readTimes'],
        'listenTimes': json['listenTimes'],
        'roseGiven': json['roseGiven'],
        'openDate': (new Date(json['openDate'])),
        'viewsCount': json['viewsCount'],
        'isProtected': json['isProtected'],
    };
}

export function LessonTeaserToJSON(value?: LessonTeaser | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'contentId': value.contentId,
        'collectionId': value.collectionId,
        'collectionTitle': value.collectionTitle,
        'url': value.url,
        'originalUrl': value.originalUrl,
        'imageUrl': value.imageUrl,
        'originalImageUrl': value.originalImageUrl,
        'providerImageUrl': value.providerImageUrl,
        'title': value.title,
        'description': value.description,
        'duration': value.duration,
        'audio': value.audio,
        'audioPending': value.audioPending,
        'pubDate': (value.pubDate.toISOString()),
        'sharedDate': (value.sharedDate === null ? null : value.sharedDate.toISOString()),
        'sharedByName': value.sharedByName,
        'giveRoseUrl': value.giveRoseUrl,
        'wordCount': value.wordCount,
        'uniqueWordCount': value.uniqueWordCount,
        'external_type': value.externalType,
        'type': value.type,
        'status': value.status,
        'pos': value.pos,
        'price': value.price,
        'opened': value.opened,
        'completed': value.completed,
        'percentCompleted': value.percentCompleted,
        'newWordsCount': value.newWordsCount,
        'difficulty': value.difficulty,
        'providerName': value.providerName,
        'providerDescription': value.providerDescription,
        'lastRoseReceived': (value.lastRoseReceived.toISOString()),
        'lessonRating': value.lessonRating,
        'lessonVotes': value.lessonVotes,
        'audioRating': value.audioRating,
        'audioVotes': value.audioVotes,
        'rosesCount': value.rosesCount,
        'isFavorite': value.isFavorite,
        'isOverLimit': value.isOverLimit,
        'level': value.level,
        'tags': value.tags,
        'providerUrl': value.providerUrl,
        'readTimes': value.readTimes,
        'listenTimes': value.listenTimes,
        'roseGiven': value.roseGiven,
        'openDate': (value.openDate.toISOString()),
        'viewsCount': value.viewsCount,
        'isProtected': value.isProtected,
    };
}

