/* tslint:disable */
/* eslint-disable */
/**
 * Lingq.com API
 * HTTP API for lingq.com
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues, getByKey } from '../runtime';
/**
 *
 * @export
 * @interface LessonTeaser
 */
export interface LessonTeaser {
  /**
   *
   * @type {number}
   * @memberof LessonTeaser
   */
  id: number;
  /**
   *
   * @type {number}
   * @memberof LessonTeaser
   */
  contentId: number;
  /**
   *
   * @type {number}
   * @memberof LessonTeaser
   */
  collectionId: number;
  /**
   *
   * @type {string}
   * @memberof LessonTeaser
   */
  collectionTitle: string;
  /**
   *
   * @type {string}
   * @memberof LessonTeaser
   */
  url: string;
  /**
   *
   * @type {string}
   * @memberof LessonTeaser
   */
  originalUrl: string | null;
  /**
   *
   * @type {string}
   * @memberof LessonTeaser
   */
  imageUrl: string;
  /**
   *
   * @type {string}
   * @memberof LessonTeaser
   */
  originalImageUrl: string;
  /**
   *
   * @type {string}
   * @memberof LessonTeaser
   */
  providerImageUrl: string;
  /**
   *
   * @type {string}
   * @memberof LessonTeaser
   */
  title: string;
  /**
   *
   * @type {string}
   * @memberof LessonTeaser
   */
  description: string;
  /**
   *
   * @type {number}
   * @memberof LessonTeaser
   */
  duration: number;
  /**
   *
   * @type {string}
   * @memberof LessonTeaser
   */
  audio: string;
  /**
   *
   * @type {boolean}
   * @memberof LessonTeaser
   */
  audioPending: boolean;
  /**
   *
   * @type {Date}
   * @memberof LessonTeaser
   */
  pubDate: Date;
  /**
   *
   * @type {Date}
   * @memberof LessonTeaser
   */
  sharedDate: Date | null;
  /**
   *
   * @type {string}
   * @memberof LessonTeaser
   */
  sharedByName: string;
  /**
   *
   * @type {string}
   * @memberof LessonTeaser
   */
  giveRoseUrl: string;
  /**
   *
   * @type {number}
   * @memberof LessonTeaser
   */
  wordCount: number;
  /**
   *
   * @type {number}
   * @memberof LessonTeaser
   */
  uniqueWordCount: number;
  /**
   *
   * @type {string}
   * @memberof LessonTeaser
   */
  externalType: string | null;
  /**
   *
   * @type {string}
   * @memberof LessonTeaser
   */
  type: LessonTeaserTypeEnum;
  /**
   *
   * @type {string}
   * @memberof LessonTeaser
   */
  status: string;
  /**
   *
   * @type {number}
   * @memberof LessonTeaser
   */
  pos: number;
  /**
   *
   * @type {number}
   * @memberof LessonTeaser
   */
  price: number;
  /**
   *
   * @type {boolean}
   * @memberof LessonTeaser
   */
  opened: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LessonTeaser
   */
  completed: boolean;
  /**
   *
   * @type {number}
   * @memberof LessonTeaser
   */
  percentCompleted: number;
  /**
   *
   * @type {number}
   * @memberof LessonTeaser
   */
  newWordsCount: number;
  /**
   *
   * @type {number}
   * @memberof LessonTeaser
   */
  difficulty: number;
  /**
   *
   * @type {string}
   * @memberof LessonTeaser
   */
  providerName: string;
  /**
   *
   * @type {string}
   * @memberof LessonTeaser
   */
  providerDescription: string;
  /**
   *
   * @type {Date}
   * @memberof LessonTeaser
   */
  lastRoseReceived: Date;
  /**
   *
   * @type {number}
   * @memberof LessonTeaser
   */
  lessonRating: number;
  /**
   *
   * @type {number}
   * @memberof LessonTeaser
   */
  lessonVotes: number;
  /**
   *
   * @type {number}
   * @memberof LessonTeaser
   */
  audioRating: number;
  /**
   *
   * @type {number}
   * @memberof LessonTeaser
   */
  audioVotes: number;
  /**
   *
   * @type {number}
   * @memberof LessonTeaser
   */
  rosesCount: number;
  /**
   *
   * @type {boolean}
   * @memberof LessonTeaser
   */
  isFavorite: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LessonTeaser
   */
  isOverLimit: boolean | null;
  /**
   *
   * @type {string}
   * @memberof LessonTeaser
   */
  level: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LessonTeaser
   */
  tags: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LessonTeaser
   */
  providerUrl: string;
  /**
   *
   * @type {number}
   * @memberof LessonTeaser
   */
  readTimes: number;
  /**
   *
   * @type {number}
   * @memberof LessonTeaser
   */
  listenTimes: number;
  /**
   *
   * @type {boolean}
   * @memberof LessonTeaser
   */
  roseGiven: boolean;
  /**
   *
   * @type {Date}
   * @memberof LessonTeaser
   */
  openDate: Date;
  /**
   *
   * @type {number}
   * @memberof LessonTeaser
   */
  viewsCount: number;
  /**
   *
   * @type {number}
   * @memberof LessonTeaser
   */
  isProtected: number | null;
}

/**
 * @export
 * @enum {string}
 */
export enum LessonTeaserTypeEnum {
  Lesson = 'lesson',
}

export function LessonTeaserFromJSON(json: any): LessonTeaser {
  return LessonTeaserFromJSONTyped(json, false);
}

export function LessonTeaserFromJSONTyped(json: any, ignoreDiscriminator: boolean): LessonTeaser {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: getByKey('LessonTeaser', json, 'id', true, false),
    contentId: getByKey('LessonTeaser', json, 'contentId', true, false),
    collectionId: getByKey('LessonTeaser', json, 'collectionId', true, false),
    collectionTitle: getByKey('LessonTeaser', json, 'collectionTitle', true, false),
    url: getByKey('LessonTeaser', json, 'url', true, false),
    originalUrl: getByKey('LessonTeaser', json, 'originalUrl', true, true),
    imageUrl: getByKey('LessonTeaser', json, 'imageUrl', true, false),
    originalImageUrl: getByKey('LessonTeaser', json, 'originalImageUrl', true, false),
    providerImageUrl: getByKey('LessonTeaser', json, 'providerImageUrl', true, false),
    title: getByKey('LessonTeaser', json, 'title', true, false),
    description: getByKey('LessonTeaser', json, 'description', true, false),
    duration: getByKey('LessonTeaser', json, 'duration', true, false),
    audio: getByKey('LessonTeaser', json, 'audio', true, false),
    audioPending: getByKey('LessonTeaser', json, 'audioPending', true, false),
    pubDate: new Date(json['pubDate']),
    sharedDate: json['sharedDate'] === null ? null : new Date(json['sharedDate']),
    sharedByName: getByKey('LessonTeaser', json, 'sharedByName', true, false),
    giveRoseUrl: getByKey('LessonTeaser', json, 'giveRoseUrl', true, false),
    wordCount: getByKey('LessonTeaser', json, 'wordCount', true, false),
    uniqueWordCount: getByKey('LessonTeaser', json, 'uniqueWordCount', true, false),
    externalType: getByKey('LessonTeaser', json, 'external_type', true, true),
    type: getByKey('LessonTeaser', json, 'type', true, false),
    status: getByKey('LessonTeaser', json, 'status', true, false),
    pos: getByKey('LessonTeaser', json, 'pos', true, false),
    price: getByKey('LessonTeaser', json, 'price', true, false),
    opened: getByKey('LessonTeaser', json, 'opened', true, false),
    completed: getByKey('LessonTeaser', json, 'completed', true, false),
    percentCompleted: getByKey('LessonTeaser', json, 'percentCompleted', true, false),
    newWordsCount: getByKey('LessonTeaser', json, 'newWordsCount', true, false),
    difficulty: getByKey('LessonTeaser', json, 'difficulty', true, false),
    providerName: getByKey('LessonTeaser', json, 'providerName', true, false),
    providerDescription: getByKey('LessonTeaser', json, 'providerDescription', true, false),
    lastRoseReceived: new Date(json['lastRoseReceived']),
    lessonRating: getByKey('LessonTeaser', json, 'lessonRating', true, false),
    lessonVotes: getByKey('LessonTeaser', json, 'lessonVotes', true, false),
    audioRating: getByKey('LessonTeaser', json, 'audioRating', true, false),
    audioVotes: getByKey('LessonTeaser', json, 'audioVotes', true, false),
    rosesCount: getByKey('LessonTeaser', json, 'rosesCount', true, false),
    isFavorite: getByKey('LessonTeaser', json, 'isFavorite', true, false),
    isOverLimit: getByKey('LessonTeaser', json, 'isOverLimit', true, true),
    level: getByKey('LessonTeaser', json, 'level', true, false),
    tags: getByKey('LessonTeaser', json, 'tags', true, false),
    providerUrl: getByKey('LessonTeaser', json, 'providerUrl', true, false),
    readTimes: getByKey('LessonTeaser', json, 'readTimes', true, false),
    listenTimes: getByKey('LessonTeaser', json, 'listenTimes', true, false),
    roseGiven: getByKey('LessonTeaser', json, 'roseGiven', true, false),
    openDate: new Date(json['openDate']),
    viewsCount: getByKey('LessonTeaser', json, 'viewsCount', true, false),
    isProtected: getByKey('LessonTeaser', json, 'isProtected', true, true),
  };
}

export function LessonTeaserToJSON(value?: LessonTeaser | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    contentId: value.contentId,
    collectionId: value.collectionId,
    collectionTitle: value.collectionTitle,
    url: value.url,
    originalUrl: value.originalUrl,
    imageUrl: value.imageUrl,
    originalImageUrl: value.originalImageUrl,
    providerImageUrl: value.providerImageUrl,
    title: value.title,
    description: value.description,
    duration: value.duration,
    audio: value.audio,
    audioPending: value.audioPending,
    pubDate: value.pubDate.toISOString(),
    sharedDate: value.sharedDate === null ? null : value.sharedDate.toISOString(),
    sharedByName: value.sharedByName,
    giveRoseUrl: value.giveRoseUrl,
    wordCount: value.wordCount,
    uniqueWordCount: value.uniqueWordCount,
    external_type: value.externalType,
    type: value.type,
    status: value.status,
    pos: value.pos,
    price: value.price,
    opened: value.opened,
    completed: value.completed,
    percentCompleted: value.percentCompleted,
    newWordsCount: value.newWordsCount,
    difficulty: value.difficulty,
    providerName: value.providerName,
    providerDescription: value.providerDescription,
    lastRoseReceived: value.lastRoseReceived.toISOString(),
    lessonRating: value.lessonRating,
    lessonVotes: value.lessonVotes,
    audioRating: value.audioRating,
    audioVotes: value.audioVotes,
    rosesCount: value.rosesCount,
    isFavorite: value.isFavorite,
    isOverLimit: value.isOverLimit,
    level: value.level,
    tags: value.tags,
    providerUrl: value.providerUrl,
    readTimes: value.readTimes,
    listenTimes: value.listenTimes,
    roseGiven: value.roseGiven,
    openDate: value.openDate.toISOString(),
    viewsCount: value.viewsCount,
    isProtected: value.isProtected,
  };
}
