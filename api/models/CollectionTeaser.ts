/* tslint:disable */
/* eslint-disable */
/**
 * Lingq.com API
 * HTTP API for lingq.com
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues, getByKey } from '../runtime';
/**
 *
 * @export
 * @interface CollectionTeaser
 */
export interface CollectionTeaser {
  /**
   *
   * @type {number}
   * @memberof CollectionTeaser
   */
  pk: number;
  /**
   *
   * @type {string}
   * @memberof CollectionTeaser
   */
  url: string;
  /**
   *
   * @type {string}
   * @memberof CollectionTeaser
   */
  title: string;
  /**
   *
   * @type {string}
   * @memberof CollectionTeaser
   */
  description: string;
  /**
   *
   * @type {string}
   * @memberof CollectionTeaser
   */
  audio: string | null;
  /**
   *
   * @type {string}
   * @memberof CollectionTeaser
   */
  image: string;
  /**
   *
   * @type {string}
   * @memberof CollectionTeaser
   */
  imageUrl: string;
  /**
   *
   * @type {string}
   * @memberof CollectionTeaser
   */
  originalImageUrl: string;
  /**
   *
   * @type {number}
   * @memberof CollectionTeaser
   */
  completedRatio: number;
  /**
   *
   * @type {number}
   * @memberof CollectionTeaser
   */
  completedTimes: number;
  /**
   *
   * @type {number}
   * @memberof CollectionTeaser
   */
  lessonsCount: number;
  /**
   *
   * @type {number}
   * @memberof CollectionTeaser
   */
  newWordsCount: number;
  /**
   *
   * @type {number}
   * @memberof CollectionTeaser
   */
  difficulty: number;
  /**
   *
   * @type {string}
   * @memberof CollectionTeaser
   */
  level: string;
  /**
   *
   * @type {number}
   * @memberof CollectionTeaser
   */
  price: number;
  /**
   *
   * @type {string}
   * @memberof CollectionTeaser
   */
  provider: string;
  /**
   *
   * @type {string}
   * @memberof CollectionTeaser
   */
  providerImageUrl: string;
  /**
   *
   * @type {string}
   * @memberof CollectionTeaser
   */
  sharedByName: string;
  /**
   *
   * @type {string}
   * @memberof CollectionTeaser
   */
  sharedByImageUrl: string;
  /**
   *
   * @type {boolean}
   * @memberof CollectionTeaser
   */
  sourceURLEnabled: boolean | null;
  /**
   *
   * @type {string}
   * @memberof CollectionTeaser
   */
  sourceURL: string | null;
  /**
   *
   * @type {string}
   * @memberof CollectionTeaser
   */
  tags: string;
  /**
   *
   * @type {string}
   * @memberof CollectionTeaser
   */
  externalType: string | null;
  /**
   *
   * @type {number}
   * @memberof CollectionTeaser
   */
  rosesCount: number;
  /**
   *
   * @type {boolean}
   * @memberof CollectionTeaser
   */
  roseGiven: boolean;
  /**
   *
   * @type {string}
   * @memberof CollectionTeaser
   */
  type: CollectionTeaserTypeEnum;
}

/**
 * @export
 * @enum {string}
 */
export enum CollectionTeaserTypeEnum {
  Collection = 'collection',
}

export function CollectionTeaserFromJSON(json: any): CollectionTeaser {
  return CollectionTeaserFromJSONTyped(json, false);
}

export function CollectionTeaserFromJSONTyped(json: any, ignoreDiscriminator: boolean): CollectionTeaser {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    pk: getByKey('CollectionTeaser', json, 'pk', true, false),
    url: getByKey('CollectionTeaser', json, 'url', true, false),
    title: getByKey('CollectionTeaser', json, 'title', true, false),
    description: getByKey('CollectionTeaser', json, 'description', true, false),
    audio: getByKey('CollectionTeaser', json, 'audio', true, true),
    image: getByKey('CollectionTeaser', json, 'image', true, false),
    imageUrl: getByKey('CollectionTeaser', json, 'imageUrl', true, false),
    originalImageUrl: getByKey('CollectionTeaser', json, 'originalImageUrl', true, false),
    completedRatio: getByKey('CollectionTeaser', json, 'completedRatio', true, false),
    completedTimes: getByKey('CollectionTeaser', json, 'completedTimes', true, false),
    lessonsCount: getByKey('CollectionTeaser', json, 'lessonsCount', true, false),
    newWordsCount: getByKey('CollectionTeaser', json, 'newWordsCount', true, false),
    difficulty: getByKey('CollectionTeaser', json, 'difficulty', true, false),
    level: getByKey('CollectionTeaser', json, 'level', true, false),
    price: getByKey('CollectionTeaser', json, 'price', true, false),
    provider: getByKey('CollectionTeaser', json, 'provider', true, false),
    providerImageUrl: getByKey('CollectionTeaser', json, 'providerImageUrl', true, false),
    sharedByName: getByKey('CollectionTeaser', json, 'sharedByName', true, false),
    sharedByImageUrl: getByKey('CollectionTeaser', json, 'sharedByImageUrl', true, false),
    sourceURLEnabled: getByKey('CollectionTeaser', json, 'sourceURLEnabled', true, true),
    sourceURL: getByKey('CollectionTeaser', json, 'sourceURL', true, true),
    tags: getByKey('CollectionTeaser', json, 'tags', true, false),
    externalType: getByKey('CollectionTeaser', json, 'external_type', true, true),
    rosesCount: getByKey('CollectionTeaser', json, 'rosesCount', true, false),
    roseGiven: getByKey('CollectionTeaser', json, 'roseGiven', true, false),
    type: getByKey('CollectionTeaser', json, 'type', true, false),
  };
}

export function CollectionTeaserToJSON(value?: CollectionTeaser | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    pk: value.pk,
    url: value.url,
    title: value.title,
    description: value.description,
    audio: value.audio,
    image: value.image,
    imageUrl: value.imageUrl,
    originalImageUrl: value.originalImageUrl,
    completedRatio: value.completedRatio,
    completedTimes: value.completedTimes,
    lessonsCount: value.lessonsCount,
    newWordsCount: value.newWordsCount,
    difficulty: value.difficulty,
    level: value.level,
    price: value.price,
    provider: value.provider,
    providerImageUrl: value.providerImageUrl,
    sharedByName: value.sharedByName,
    sharedByImageUrl: value.sharedByImageUrl,
    sourceURLEnabled: value.sourceURLEnabled,
    sourceURL: value.sourceURL,
    tags: value.tags,
    external_type: value.externalType,
    rosesCount: value.rosesCount,
    roseGiven: value.roseGiven,
    type: value.type,
  };
}
