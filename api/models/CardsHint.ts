/* tslint:disable */
/* eslint-disable */
/**
 * Lingq.com API
 * HTTP API for lingq.com
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CardsHint
 */
export interface CardsHint {
    /**
     * 
     * @type {number}
     * @memberof CardsHint
     */
    id: number;
    /**
     * 
     * @type {boolean}
     * @memberof CardsHint
     */
    flagged: boolean;
    /**
     * 
     * @type {string}
     * @memberof CardsHint
     */
    locale: string;
    /**
     * 
     * @type {number}
     * @memberof CardsHint
     */
    termId: number;
    /**
     * 
     * @type {boolean}
     * @memberof CardsHint
     */
    isGoogleTranslate: boolean;
    /**
     * 
     * @type {number}
     * @memberof CardsHint
     */
    popularity: number;
    /**
     * 
     * @type {boolean}
     * @memberof CardsHint
     */
    approved: boolean;
    /**
     * 
     * @type {string}
     * @memberof CardsHint
     */
    detectedLocale: string | null;
    /**
     * 
     * @type {number}
     * @memberof CardsHint
     */
    creatorId: number;
    /**
     * 
     * @type {string}
     * @memberof CardsHint
     */
    text: string;
    /**
     * 
     * @type {number}
     * @memberof CardsHint
     */
    wordId: number;
}

export function CardsHintFromJSON(json: any): CardsHint {
    return CardsHintFromJSONTyped(json, false);
}

export function CardsHintFromJSONTyped(json: any, ignoreDiscriminator: boolean): CardsHint {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'flagged': json['flagged'],
        'locale': json['locale'],
        'termId': json['term_id'],
        'isGoogleTranslate': json['is_google_translate'],
        'popularity': json['popularity'],
        'approved': json['approved'],
        'detectedLocale': json['detected_locale'],
        'creatorId': json['creator_id'],
        'text': json['text'],
        'wordId': json['word_id'],
    };
}

export function CardsHintToJSON(value?: CardsHint | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'flagged': value.flagged,
        'locale': value.locale,
        'term_id': value.termId,
        'is_google_translate': value.isGoogleTranslate,
        'popularity': value.popularity,
        'approved': value.approved,
        'detected_locale': value.detectedLocale,
        'creator_id': value.creatorId,
        'text': value.text,
        'word_id': value.wordId,
    };
}

